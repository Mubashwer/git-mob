on:
  workflow_run:
    workflows: [build]
    types:
      - completed
    branches: [main]

permissions:
  contents: write
  pull-requests: write

name: release

jobs:
  release-please:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}

    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          package-name: release-please-action
          release-type: rust
          token: ${{ secrets.GH_TOKEN }}
          prerelease: true

  upload-binaries:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: git-mob
            asset_name: git-mob-linux-amd64
          - os: windows-latest
            artifact_name: git-mob.exe
            asset_name: git-mob-windows-amd64
          - os: macos-latest
            artifact_name: git-mob
            asset_name: git-mob-macos-amd64
    runs-on: ${{ matrix.os }}
    if: ${{ needs.release-please.outputs.releases_created }}
    needs: [release-please]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Setup cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo build
        run: cargo build --release --locked

      - name: Archive binary
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: tar
          directory: target/release
          path: ${{ matrix.artifact_name }}
          filename: ${{ matrix.asset_name }}.tar.gz

      - name: Upload archived binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          file: target/release/${{ matrix.asset_name }}.tar.gz
          tag: ${{ needs.release-please.outputs.tag_name }}

  publish-cargo:
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.releases_created }}
    needs: [release-please]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Setup cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo publish
        run: cargo publish --no-verify --locked
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
