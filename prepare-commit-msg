#!/bin/sh
set -e

# Do nothing during rebase
if [ "$(git branch --show-current)" = "" ]; then
    exit 0
fi

# Do nothing during amend or reuse of a commit message
if [ "$2" = 'commit' ]; then
    exit 0
fi

commit_msg_file_text=$(cat "$1");
commit_msg=$(echo "$commit_msg_file_text" | grep -v "^\s*#" || "true");
commit_comments=$(echo "$commit_msg_file_text" | grep "^\s*#" || "true");

# If the branch name starts with string resembling a Jira Issue ID, fetch it
jira_issue_id=$(git branch --show-current | grep -o -E "^[a-zA-Z]+-[0-9]+" | tr '[:lower:]' '[:upper:]');

# Is the Jira Issue ID unable to be determined or does the commit message already start with it?
if [ -z "$jira_issue_id" ] ||  echo "$commit_msg" | grep -q -i "^\[\?$jira_issue_id\]\?"; then
	commit_prefix="";
else
	commit_prefix="[$jira_issue_id] ";
fi

co_authored_by_trailers=$(git mob --list | sed "s/^/Co-authored-by: /");

# Update the file that holds the commit message
if [ -z "$co_authored_by_trailers" ]; then
  printf "%s%s\n\n%s" "$commit_prefix" "$commit_msg" "$commit_comments" > "$1"
else
  printf "%s%s\n\n%s\n\n%s" "$commit_prefix" "$commit_msg" "$co_authored_by_trailers" "$commit_comments" > "$1"
fi
